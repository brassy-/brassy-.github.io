import * as React from 'react';
import { Frame } from 'framer';

export function safariHeader(parent, appearance, title) {
	return (
		<Frame
			style={{
				height: 38,
				background: appearance
					? 'linear-gradient(rgba(33,33,33,.6), rgba(10,10,10,.6)), linear-gradient(rgba(255,255,255,.5), rgba(255,255,255,.5))'
					: 'linear-gradient(rgba(230,230,230,.75), rgba(195,195,195,.75))',
				color: appearance ? 'rgba(255,255,255,.85)' : 'rgba(0,0,0,0.73)',
				boxShadow: appearance
					? ' inset 0 -1px rgba(0,0,0,0.2)'
					: 'inset 0 -1px 1px rgba(0,0,0,0.15), inset 0 1px rgba(255,255,255,0.4)',
				borderRadius: '6px 6px 0 0',
				width: '100%',
				WebkitBackdropFilter: 'blur(24px)',
				overflow: 'hidden'
			}}
			onPan={parent.panHeaderHandler}
			onPanStart={parent.panHeaderStartHandler}
			top={0}
			left={0}>
			<div
				style={{
					width: '100%',
					height: 38,
					display: 'flex',
					alignItems: 'center',
					justifyContent: 'space-between',
					whiteSpace: 'nowrap',
					textAlign: 'left'
				}}>
				<div style={{ display: 'flex', alignItems: 'center' }}>
					<div style={{ ...trafficLightsWrapper, marginLeft: 14 }}>
						<div style={trafficLight('#FF6157', '#E24640', appearance)} />
						<div style={trafficLight('#FFC12F', '#DFA023', appearance)} />
						<div style={trafficLight('#2ACB42', '#1BAC2C', appearance)} />
					</div>
					<div style={{ flexShrink: 0, width: 66, display: 'flex', paddingLeft: 13 }}>
						<div
							style={{
								width: 26,
								height: 22,
								borderRadius: 4,
								background: appearance
									? 'linear-gradient(rgba(255,255,255,.25), rgba(255,255,255,.25))'
									: 'linear-gradient(#FEFEFE, #F1F1F1)',
								boxShadow: '0 1px 1px rgba(0,0,0,0.08), 0 0 0 1px rgba(0,0,0,0.08)',
								display: 'flex',
								justifyContent: 'center',
								alignItems: 'center'
							}}>
							<svg
								width='14'
								height='14'
								viewBox='0 0 14 14'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'>
								<path
									d='M8.75137 12.9187C8.46959 13.2005 8.01274 13.2005 7.73096 12.9187L2.25156 7.43928C2.04481 7.23253 2.04481 6.89733 2.25156 6.69058L7.86084 1.0813C8.14262 0.79952 8.59947 0.79952 8.88125 1.0813C9.16303 1.36308 9.16303 1.81993 8.88125 2.10171L3.91802 7.06493L8.75137 11.8983C9.03315 12.1801 9.03315 12.6369 8.75137 12.9187Z'
									fill={appearance ? '#FFFFFF' : '#808080'}
								/>
							</svg>
						</div>
						<div
							style={{
								width: 26,
								height: 22,
								background: appearance
									? 'linear-gradient(rgba(255,255,255,.25), rgba(255,255,255,.25))'
									: 'linear-gradient(#FEFEFE, #F1F1F1)',
								marginLeft: 1,
								borderRadius: 4,
								boxShadow: '0 1px 1px rgba(0,0,0,0.08), 0 0 0 1px rgba(0,0,0,0.08)',
								display: 'flex',
								justifyContent: 'center',
								alignItems: 'center'
							}}>
							<svg
								width='14'
								height='14'
								viewBox='0 0 14 14'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'>
								<path
									d='M4.38748 12.9187C4.66925 13.2005 5.12611 13.2005 5.40788 12.9187L10.5545 7.77204C10.9451 7.38151 10.9451 6.74835 10.5545 6.35783L5.27801 1.0813C4.99623 0.79952 4.53938 0.79952 4.2576 1.0813C3.97582 1.36308 3.97582 1.81993 4.2576 2.10171L9.22082 7.06493L4.38747 11.8983C4.1057 12.1801 4.1057 12.6369 4.38748 12.9187Z'
									fill={appearance ? '#FFFFFF' : '#808080'}
								/>
							</svg>
						</div>
					</div>
				</div>

				<div
					style={{
						height: 22,
						width: '40%',
						borderRadius: 4,
						background: appearance
							? 'linear-gradient(rgba(255,255,255,.2), rgba(255,255,255,.2))'
							: 'linear-gradient(#FEFEFE, #F1F1F1)',
						boxShadow: '0 1px 1px rgba(0,0,0,0.08), 0 0 0 1px rgba(0,0,0,0.08)',
						display: 'flex',
						flexDirection: 'row',
						fontSize: 13,
						justifyContent: 'space-between',
						alignItems: 'center',
						color: appearance ? 'white' : 'black'
					}}>
					<div style={spacer(15)} />
					<div style={{ display: 'flex' }}>
						<svg
							width='15'
							height='15'
							viewBox='1 -1 15 15'
							fill='none'
							xmlns='http://www.w3.org/2000/svg'>
							<path
								fill-rule='evenodd'
								clip-rule='evenodd'
								d='M4.50013 4L4.50004 5.5H3V12.5H12V5.5H10.5V4C10.5 2.65431 9.20104 1.5 7.49987 1.5C5.79861 1.5 4.50016 2.65442 4.50013 4ZM7.49987 2.5C6.20089 2.5 5.50013 3.3456 5.50013 4L5.50004 5.5H9.5V4C9.5 3.34569 8.79896 2.5 7.49987 2.5Z'
								fill={appearance ? 'white' : 'black'}
							/>
						</svg>

						{title}
					</div>

					<div style={{ paddingRight: '3px' }}>
						<svg
							width='15'
							height='15'
							viewBox='0 -2 15 15'
							fill='none'
							xmlns='http://www.w3.org/2000/svg'>
							<path
								fill-rule='evenodd'
								clip-rule='evenodd'
								d='M7.5 5.5L12 2.75L7.5 0V2C4.46243 2 2 4.46243 2 7.5C2 10.5376 4.46243 13 7.5 13C10.5376 13 13 10.5376 13 7.5H12C12 9.98528 9.98528 12 7.5 12C5.01472 12 3 9.98528 3 7.5C3 5.01472 5.01472 3 7.5 3V5.5Z'
								fill={appearance ? '#FFFFFF' : '#7E7E7E'}
							/>
						</svg>
					</div>
				</div>
				<div
					style={{
						flexShrink: 0,
						display: 'flex',
						alignItems: 'flex-end',
						height: 38
					}}>
					<div style={spacer(106)} />
					<div
						style={{
							width: 26,
							height: 26,
							background: 'linear-gradient(rgba(50,50,50,.2), rgba(30,30,30,.2))',
							boxShadow: appearance
								? 'inset 1px 1px 0 rgba(255,255,255,.15)'
								: 'inset 1px 1px 0 rgba(0,0,0,0.08)',
							flexShrink: 0,
							alignSelf: 'flex-end'
						}}>
						<div style={{ left: 7, top: 4, position: 'relative' }}>
							<svg
								width='11'
								height='11'
								viewBox='0 0 11 11'
								fill='none'
								xmlns='http://www.w3.org/2000/svg'>
								<path
									fill-rule='evenodd'
									clip-rule='evenodd'
									d='M6 0H5V5H0V6H5V11H6V6H11V5H6V0Z'
									fill={appearance ? 'rgba(255,255,255,0.6)' : 'rgba(0,0,0,0.5)'}
								/>
							</svg>
						</div>
					</div>
				</div>
			</div>
		</Frame>
	);
}

export function macOSHeader(parent: any, appearance: boolean, title: string) {
	return (
		<Frame
			style={{
				height: 22,
				background: appearance
					? 'linear-gradient(#4B4B4B, #3D3D3D)'
					: 'linear-gradient(#EDECED, #D2D1D2)',
				boxShadow: appearance
					? 'inset 0 -1px rgba(0,0,0,1), inset 0 -1px rgba(43,43,43,1), inset 0 -1px rgba(255,255,255,0.01)'
					: 'inset 0 1px 1px rgba(255,255,255,0.5), inset 0 -1px rgba(183,180,183,1), inset 0 -1px rgba(183,180,183,0.3)',
				borderRadius: '4px 4px 0 0',
				color: appearance ? 'rgba(255,255,255,.85)' : 'rgba(0,0,0,0.73)',
				width: '100%'
			}}
			onPan={parent.panHeaderHandler}
			onPanStart={parent.panHeaderStartHandler}
			top={0}
			left={0}>
			<div
				style={{
					width: '100%',
					height: 22,
					display: 'flex',
					alignItems: 'center',
					justifyContent: 'space-between',
					whiteSpace: 'nowrap',
					textAlign: 'left',
					padding: 8,
					overflow: 'hidden'
				}}>
				<div style={trafficLightsWrapper}>
					<div style={trafficLight('#FF6157', '#E24640', appearance)} />
					<div style={trafficLight('#FFC12F', '#DFA023', appearance)} />
					<div style={trafficLight('#2ACB42', '#1BAC2C', appearance)} />
				</div>
				<div style={{ fontSize: 13 }}>{title}</div>
				<div style={spacer(52)} />
			</div>
		</Frame>
	);
}

export function noHeader(parent: any, appearance: boolean) {
	return (
		<Frame
			style={{
				height: 30,
				background: null,
				borderRadius: '4px 4px 0 0',
				width: '100%',
				paddingTop: 0
			}}
			onPan={parent.panHeaderHandler}
			onPanStart={parent.panHeaderStartHandler}
			top={0}
			left={0}
		/>
	);
}

const trafficLightsWrapper: React.CSSProperties = {
	width: 52,
	flexShrink: 0,
	height: '100%',
	display: 'flex',
	alignItems: 'center',
	justifyContent: 'space-between'
};

function trafficLight(
	background: string,
	borderColor: string,
	appearance: boolean
): React.CSSProperties {
	return {
		width: 12,
		height: 12,
		background,
		borderRadius: '50%',
		borderColor: borderColor,
		borderStyle: 'solid',
		borderWidth: appearance ? 0 : 0.5
	};
}

function spacer(width: number): React.CSSProperties {
	return {
		width: width
	};
}
